h1. Air Native Extension for Flurry analytics on iOS & Android

*Please note that we are no longer able to support this project and are not contributing to it.*

This is an "Air native extension":http://www.adobe.com/devnet/air/native-extensions-for-air.html for "Flurry analytics":http://www.flurry.com/ on the iOS and Android platforms.

h3. Version

This is version 0.5.0 of this extension. The compiled extension contains version 4.4.0 of the Flurry Analytics library for iOS and version 3.4.0 of the Flurry Analytics library for Android.

If you wish to use a different version of the Flurry Analytics library, you may do so by following the instructions below to compile the extension.

h3. Binary files

The bin folder contains the compiled extension and the default swc, which can be used for local testing if required by your development environment (Flash Builder shouldn't need it, but other IDEs may).

h3. Using the extension

h4. Start a Flurry session

At its simplest, you initialize the extension with your application's identifier as follows

@Flurry.startSession( "your flurry id" );@

You should only start the session once, after which you can log as many events as you wish.

h4. End a Flurry session

On Android, this ends the current session (and sends the accumulated event data to Flurry). On iOS it does nothing, the session automatically ends when your app enters the background.

@Flurry.endSession();@

h4. Log a simple event

You may then log events with Flurry like this

@Flurry.logEvent( "User did something" );@

h4. Log an event with parameters

You can pass parameters through to a Flurry event via a simple object, as follows

@Flurry.logEvent( "Screen resolution", { width : Capabilities.screenResolutionX, height : Capabilities.screenResolutionY, dpi : Capabilities.screenDPI } );@

h4. Log a timed event

Flurry will also log timed events. This is a two-step process. You first start the timed event.

@Flurry.startTimedEvent( "User playing game" );@

Then, later, you end the timed event.

@Flurry.endTimedEvent( "User playing game" );@

h4. Log an error

You can also log errors with Flurry

@Flurry.logError( "NullPointer", "Attempt to use a reference to a null pointer" );@

h3. More info

That's just a starter. All the features of the Flurry api have been implemented. Read the documentation in the Actionscript source code for all the features.

h3. Developers

* "Stick Sports":http://www.sticksports.com/

h2. License

This project is licensed under the "BSD license":https://github.com/StickSports/ANE-Flurry-Analytics/blob/master/LICENSE
